Description: fix denial of service via crafted indirect offset value
Origin: backport, https://github.com/glensc/file/commit/3c081560c23f20b2985c285338b52c7aae9fdb0f
Origin: backport, https://github.com/glensc/file/commit/cc9e74dfeca5265ad725acc926ef0b8d2a18ee70
Origin: backport, https://github.com/glensc/file/commit/c0c0032b9e9eb57b91fefef905a3b018bab492d9
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=738832

Index: file-5.14/src/ascmagic.c
===================================================================
--- file-5.14.orig/src/ascmagic.c	2012-10-31 13:03:01.000000000 -0400
+++ file-5.14/src/ascmagic.c	2014-02-24 11:20:34.883997635 -0500
@@ -147,7 +147,7 @@
 		    == NULL)
 			goto done;
 		if ((rv = file_softmagic(ms, utf8_buf,
-		    (size_t)(utf8_end - utf8_buf), TEXTTEST, text)) == 0)
+		    (size_t)(utf8_end - utf8_buf), 0, TEXTTEST, text)) == 0)
 			rv = -1;
 	}
 
Index: file-5.14/src/file.h
===================================================================
--- file-5.14.orig/src/file.h	2013-02-18 10:40:59.000000000 -0500
+++ file-5.14/src/file.h	2014-02-24 11:20:34.883997635 -0500
@@ -438,7 +438,7 @@
     unichar **, size_t *, const char **, const char **, const char **);
 protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);
 protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,
-    int, int);
+    size_t, int, int);
 protected int file_apprentice(struct magic_set *, const char *, int);
 protected int file_magicfind(struct magic_set *, const char *, struct mlist *);
 protected uint64_t file_signextend(struct magic_set *, struct magic *,
Index: file-5.14/src/funcs.c
===================================================================
--- file-5.14.orig/src/funcs.c	2012-10-31 13:03:01.000000000 -0400
+++ file-5.14/src/funcs.c	2014-02-24 11:20:34.883997635 -0500
@@ -228,7 +228,7 @@
 
 	/* try soft magic tests */
 	if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)
-		if ((m = file_softmagic(ms, ubuf, nb, BINTEST,
+		if ((m = file_softmagic(ms, ubuf, nb, 0, BINTEST,
 		    looks_text)) != 0) {
 			if ((ms->flags & MAGIC_DEBUG) != 0)
 				(void)fprintf(stderr, "softmagic %d\n", m);
Index: file-5.14/src/softmagic.c
===================================================================
--- file-5.14.orig/src/softmagic.c	2013-03-21 13:45:14.000000000 -0400
+++ file-5.14/src/softmagic.c	2014-02-24 11:23:15.588000240 -0500
@@ -69,13 +69,13 @@
 /*ARGSUSED1*/		/* nbytes passed for regularity, maybe need later */
 protected int
 file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,
-    int mode, int text)
+    size_t level, int mode, int text)
 {
 	struct mlist *ml;
 	int rv, printed_something = 0, need_separator = 0;
 	for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)
 		if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,
-		    text, 0, 0, &printed_something, &need_separator,
+		    text, 0, level, &printed_something, &need_separator,
 		    NULL)) != 0)
 			return rv;
 
@@ -1703,6 +1703,8 @@
 		break;
 
 	case FILE_INDIRECT:
+		if (offset == 0)
+			return 0;
 		if (nbytes < offset)
 			return 0;
 		sbuf = ms->o.buf;
@@ -1710,7 +1712,7 @@
 		ms->o.buf = NULL;
 		ms->offset = 0;
 		rv = file_softmagic(ms, s + offset, nbytes - offset,
-		    BINTEST, text);
+		    recursion_level, BINTEST, text);
 		if ((ms->flags & MAGIC_DEBUG) != 0)
 			fprintf(stderr, "indirect @offs=%u[%d]\n", offset, rv);
 		rbuf = ms->o.buf;
@@ -1718,12 +1720,16 @@
 		ms->offset = soffset;
 		if (rv == 1) {
 			if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&
-			    file_printf(ms, m->desc, offset) == -1)
+			    file_printf(ms, m->desc, offset) == -1) {
+				free(rbuf);
 				return -1;
-			if (file_printf(ms, "%s", rbuf) == -1)
+			}
+			if (file_printf(ms, "%s", rbuf) == -1) {
+				free(rbuf);
 				return -1;
-			free(rbuf);
+			}
 		}
+		free(rbuf);
 		return rv;
 
 	case FILE_USE:
