From 27a14bc7ba285a0a5ebfdb55e54001aa11932b08 Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Wed, 4 Jun 2014 17:36:34 +0000
Subject: [PATCH] Correctly compute the truncated pascal string size (Francisco
 Alonso and Jan Kaluza at RedHat)

---
 src/softmagic.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

Index: file-5.14/src/softmagic.c
===================================================================
--- file-5.14.orig/src/softmagic.c	2014-07-10 09:28:14.446565969 -0400
+++ file-5.14/src/softmagic.c	2014-07-10 09:28:14.442565969 -0400
@@ -897,10 +897,18 @@
 		return 1;
 	}
 	case FILE_PSTRING: {
-		char *ptr1 = p->s, *ptr2 = ptr1 + file_pstring_length_size(m);
+		size_t sz = file_pstring_length_size(m);
+		char *ptr1 = p->s, *ptr2 = ptr1 + sz;
 		size_t len = file_pstring_get_length(m, ptr1);
-		if (len >= sizeof(p->s))
-			len = sizeof(p->s) - 1;
+		if (len >= sizeof(p->s)) {
+			/*
+			 * The size of the pascal string length (sz)
+			 * is 1, 2, or 4. We need at least 1 byte for NUL
+			 * termination, but we've already truncated the
+			 * string by p->s, so we need to deduct sz.
+			 */ 
+			len = sizeof(p->s) - sz;
+		}
 		while (len--)
 			*ptr1++ = *ptr2++;
 		*ptr1 = '\0';
