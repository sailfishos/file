Subject: Add a limit to the number of times a name/use entries can be used
Upstream-Author: Christos Zoulas <christos@zoulas.com>
Date: Fri Nov 28 02:35:05 2014 +0000
Origin: FILE5_20-37-g0056ec3
Last-Update: 2015-01-05

(prequisite for TEMP-0000000-B67840)

Index: file-5.14/doc/file.man
===================================================================
--- file-5.14.orig/doc/file.man
+++ file-5.14/doc/file.man
@@ -298,10 +298,11 @@ attempt to preserve the access time of f
 never read them.
 .It Fl P , Fl Fl parameter Ar name=value
 Set various parameter limits.
-.Bl -column "indir" "Default" "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" -offset indent
+.Bl -column "namenum" "Default" "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" -offset indent
 .It Sy "Name" Ta Sy "Default" Ta Sy "Explanation"
 .It Li indir Ta 15 Ta recursion limit for indirect magic
 .It Li name Ta 40 Ta recursion limit for name/use magic
+.It Li namenum Ta 30 Ta use count limit for name/use magic
 .It Li phnum Ta 128 Ta max ELF program sections processed
 .It Li shnum Ta 32768 Ta max ELF sections processed
 .El
Index: file-5.14/doc/libmagic.man
===================================================================
--- file-5.14.orig/doc/libmagic.man
+++ file-5.14/doc/libmagic.man
@@ -267,6 +267,7 @@ library.
 .It Sy "Parameter" Ta Sy "Type" Ta Sy "Default"
 .It Li MAGIC_PARAM_INDIR_RECURSION Ta size_t Ta 15
 .It Li MAGIC_PARAM_NAME_RECURSION Ta size_t Ta 40
+.It Li MAGIC_PARAM_NAME_MAX Ta size_t Ta 30
 .It Li MAGIC_PARAM_PHNUM_MAX Ta size_t Ta 128
 .It Li MAGIC_PARAM_SHNUM_MAX Ta size_t Ta 32768
 .El
@@ -282,6 +283,10 @@ parameter controls how many levels of re
 for name/use calls.
 .Pp
 The
+.Dv MAGIC_PARAM_NAME_MAX
+parameter controls the maximum number of calls for name/use.
+.Pp
+The
 .Dv MAGIC_PARAM_PHNUM_MAX
 parameter controls how many elf program sections will be processed.
 .Pp
Index: file-5.14/src/ascmagic.c
===================================================================
--- file-5.14.orig/src/ascmagic.c
+++ file-5.14/src/ascmagic.c
@@ -147,7 +147,8 @@ file_ascmagic_with_encoding(struct magic
 		    == NULL)
 			goto done;
 		if ((rv = file_softmagic(ms, utf8_buf,
-		    (size_t)(utf8_end - utf8_buf), 0, 0, TEXTTEST, text)) == 0)
+		    (size_t)(utf8_end - utf8_buf), 0, 0, NULL,
+		    TEXTTEST, text)) == 0)
 			rv = -1;
 	}
 
Index: file-5.14/src/file.c
===================================================================
--- file-5.14.orig/src/file.c
+++ file-5.14/src/file.c
@@ -126,6 +126,7 @@ private struct {
 } pm[] = {
 	{ "indir",	MAGIC_PARAM_INDIR_RECURSION, 0 },
 	{ "name",	MAGIC_PARAM_NAME_RECURSION, 0 },
+	{ "namenum",	MAGIC_PARAM_NAME_MAX, 0 },
 	{ "phnum",	MAGIC_PARAM_PHNUM_MAX, 0 },
 	{ "shnum",	MAGIC_PARAM_SHNUM_MAX, 0 },
 };
Index: file-5.14/src/file.h
===================================================================
--- file-5.14.orig/src/file.h
+++ file-5.14/src/file.h
@@ -403,12 +403,14 @@ struct magic_set {
 	union VALUETYPE ms_value;	/* either number or string */
 	uint16_t indir_recursion;
 	uint16_t name_recursion;
+	uint16_t name_max;
 	uint16_t shnum_max;
 	uint16_t phnum_max;
 #define	FILE_INDIR_RECURSION	15
 #define	FILE_NAME_RECURSION	40
-#define FILE_ELF_SHNUM		32768
-#define FILE_ELF_PHNUM		128
+#define	FILE_NAME_MAX		30
+#define	FILE_ELF_SHNUM		32768
+#define	FILE_ELF_PHNUM		128
 };
 
 /* Type for Unicode characters */
@@ -447,7 +449,7 @@ protected int file_encoding(struct magic
     unichar **, size_t *, const char **, const char **, const char **);
 protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);
 protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,
-    uint16_t, uint16_t, int, int);
+    uint16_t, uint16_t,  uint16_t *, int, int);
 protected int file_apprentice(struct magic_set *, const char *, int);
 protected int file_magicfind(struct magic_set *, const char *, struct mlist *);
 protected uint64_t file_signextend(struct magic_set *, struct magic *,
Index: file-5.14/src/funcs.c
===================================================================
--- file-5.14.orig/src/funcs.c
+++ file-5.14/src/funcs.c
@@ -228,7 +228,7 @@ file_buffer(struct magic_set *ms, int fd
 
 	/* try soft magic tests */
 	if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)
-		if ((m = file_softmagic(ms, ubuf, nb, 0, 0, BINTEST,
+		if ((m = file_softmagic(ms, ubuf, nb, 0, 0, NULL, BINTEST,
 		    looks_text)) != 0) {
 			if ((ms->flags & MAGIC_DEBUG) != 0)
 				(void)fprintf(stderr, "softmagic %d\n", m);
Index: file-5.14/src/magic.c
===================================================================
--- file-5.14.orig/src/magic.c
+++ file-5.14/src/magic.c
@@ -494,6 +494,9 @@ magic_setparam(struct magic_set *ms, int
 	case MAGIC_PARAM_NAME_RECURSION:
 		ms->name_recursion = *(const size_t *)val;
 		return 0;
+	case MAGIC_PARAM_NAME_MAX:
+		ms->name_max = *(const size_t *)val;
+		return 0;
 	case MAGIC_PARAM_PHNUM_MAX:
 		ms->phnum_max = *(const size_t *)val;
 		return 0;
@@ -516,6 +519,9 @@ magic_getparam(struct magic_set *ms, int
 	case MAGIC_PARAM_NAME_RECURSION:
 		*(size_t *)val = ms->name_recursion;
 		return 0;
+	case MAGIC_PARAM_NAME_MAX:
+		*(size_t *)val = ms->name_max;
+		return 0;
 	case MAGIC_PARAM_PHNUM_MAX:
 		*(size_t *)val = ms->phnum_max;
 		return 0;
Index: file-5.14/src/magic.h
===================================================================
--- file-5.14.orig/src/magic.h
+++ file-5.14/src/magic.h
@@ -104,8 +104,9 @@ int magic_errno(magic_t);
 
 #define MAGIC_PARAM_INDIR_RECURSION	0
 #define MAGIC_PARAM_NAME_RECURSION	1
-#define MAGIC_PARAM_PHNUM_MAX		2
-#define MAGIC_PARAM_SHNUM_MAX		3
+#define MAGIC_PARAM_NAME_MAX		2
+#define MAGIC_PARAM_PHNUM_MAX		3
+#define MAGIC_PARAM_SHNUM_MAX		4
 
 int magic_setparam(magic_t, int, const void *);
 int magic_getparam(magic_t, int, void *);
Index: file-5.14/src/softmagic.c
===================================================================
--- file-5.14.orig/src/softmagic.c
+++ file-5.14/src/softmagic.c
@@ -43,10 +43,10 @@ FILE_RCSID("@(#)$File: softmagic.c,v 1.1
 
 
 private int match(struct magic_set *, struct magic *, uint32_t,
-    const unsigned char *, size_t, size_t, int, int, int, uint16_t, uint16_t, int *, int *,
+    const unsigned char *, size_t, size_t, int, int, int, uint16_t, uint16_t, uint16_t *, int *, int *,
     int *);
 private int mget(struct magic_set *, const unsigned char *,
-    struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t, uint16_t, int *,
+    struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t, uint16_t, uint16_t *, int *,
     int *, int *);
 private int magiccheck(struct magic_set *, struct magic *);
 private int32_t mprint(struct magic_set *, struct magic *);
@@ -71,13 +71,20 @@ private void cvt_64(union VALUETYPE *, c
 /*ARGSUSED1*/		/* nbytes passed for regularity, maybe need later */
 protected int
 file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,
-    uint16_t indir_level, uint16_t name_level, int mode, int text)
+    uint16_t indir_level, uint16_t name_level, uint16_t *name_count,
+       int mode, int text)
 {
 	struct mlist *ml;
+	uint16_t nc;
+	if (name_count == NULL) {
+		nc = 0;
+		name_count = &nc;
+	}
+
 	int rv, printed_something = 0, need_separator = 0;
 	for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)
 		if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,
-		    text, 0, indir_level, name_level, &printed_something, &need_separator,
+		    text, 0, indir_level, name_level, name_count, &printed_something, &need_separator,
 		    NULL)) != 0)
 			return rv;
 
@@ -114,7 +121,7 @@ file_softmagic(struct magic_set *ms, con
 private int
 match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,
     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,
-    int flip, uint16_t indir_level, uint16_t name_level, int *printed_something, int *need_separator,
+    int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count, int *printed_something, int *need_separator,
     int *returnval)
 {
 	uint32_t magindex = 0;
@@ -152,7 +159,7 @@ match(struct magic_set *ms, struct magic
 
 		/* if main entry matches, print it... */
 		switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,
-		    flip, indir_level, name_level, printed_something,
+		    flip, indir_level, name_level, name_count, printed_something,
 		    need_separator, returnval)) {
 		case -1:
 			return -1;
@@ -239,7 +246,7 @@ match(struct magic_set *ms, struct magic
 			}
 #endif
 			switch (mget(ms, s, m, nbytes, offset, cont_level, mode,
-			    text, flip, indir_level, name_level, printed_something,
+			    text, flip, indir_level, name_level, name_count, printed_something,
 			    need_separator, returnval)) {
 			case -1:
 				return -1;
@@ -1154,7 +1161,7 @@ mcopy(struct magic_set *ms, union VALUET
 private int
 mget(struct magic_set *ms, const unsigned char *s, struct magic *m,
     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,
-    int flip, uint16_t indir_level, uint16_t name_level, int *printed_something,
+    int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count, int *printed_something,
     int *need_separator, int *returnval)
 {
 	uint32_t offset = ms->offset;
@@ -1176,6 +1183,12 @@ mget(struct magic_set *ms, const unsigne
 		return -1;
 	}
 
+	if (*name_count >= ms->name_max) {
+		file_error(ms, 0, "name use count (%hu) exceeded",
+			*name_count);
+		return -1;
+	}
+
 	if (mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),
 	    (uint32_t)nbytes, m) == -1)
 		return -1;
@@ -1751,7 +1764,7 @@ mget(struct magic_set *ms, const unsigne
 			return -1;
 
 		rv = file_softmagic(ms, s + offset, nbytes - offset,
-		    indir_level + 1, name_level, BINTEST, text);
+		    indir_level + 1, name_level, name_count, BINTEST, text);
 		if ((ms->flags & MAGIC_DEBUG) != 0)
 			fprintf(stderr, "indirect @offs=%u[%d]\n", offset, rv);
 
Index: file-5.14/src/apprentice.c
===================================================================
--- file-5.14.orig/src/apprentice.c
+++ file-5.14/src/apprentice.c
@@ -490,6 +490,7 @@ file_ms_alloc(int flags)
 	ms->line = 0;
 	ms->indir_recursion = FILE_INDIR_RECURSION;
 	ms->name_recursion = FILE_NAME_RECURSION;
+	ms->name_max = FILE_NAME_MAX;
 	ms->shnum_max = FILE_ELF_SHNUM;
 	ms->phnum_max = FILE_ELF_PHNUM;
 	return ms;
